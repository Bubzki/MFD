<?xml version="1.0" encoding="UTF-8"?>
<project name="mdf" default="all">
  
  
  <property file="build.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/*.yarb/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/CVS/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.egg"/>
    <include name="*.zip"/>
    <include name="*.war"/>
    <include name="*.swc"/>
    <include name="*.ear"/>
    <include name="*.jar"/>
    <include name="*.ane"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
    <exclude name="**/?*.aj"/>
  </patternset>
  
  
  <!-- Project Libraries -->
  
  <path id="library.maven:_javax.servlet.jsp:javax.servlet.jsp-api:2.3.3.classpath">
    <pathelement location="${path.variable.maven_repository}/javax/servlet/jsp/javax.servlet.jsp-api/2.3.3/javax.servlet.jsp-api-2.3.3.jar"/>
  </path>
  
  <path id="library.maven:_javax.servlet:javax.servlet-api:4.0.1.classpath">
    <pathelement location="${path.variable.maven_repository}/javax/servlet/javax.servlet-api/4.0.1/javax.servlet-api-4.0.1.jar"/>
  </path>
  
  <path id="library.maven:_javax.servlet:jstl:1.2.classpath">
    <pathelement location="${path.variable.maven_repository}/javax/servlet/jstl/1.2/jstl-1.2.jar"/>
  </path>
  
  <path id="library.maven:_jstl:jstl:1.2.classpath">
    <pathelement location="${path.variable.maven_repository}/jstl/jstl/1.2/jstl-1.2.jar"/>
  </path>
  
  <path id="library.maven:_org.apiguardian:apiguardian-api:1.1.2.classpath">
    <pathelement location="${path.variable.maven_repository}/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar"/>
  </path>
  
  <path id="library.maven:_org.junit.jupiter:junit-jupiter-api:5.8.2.classpath">
    <pathelement location="${path.variable.maven_repository}/org/junit/jupiter/junit-jupiter-api/5.8.2/junit-jupiter-api-5.8.2.jar"/>
  </path>
  
  <path id="library.maven:_org.junit.jupiter:junit-jupiter-engine:5.8.2.classpath">
    <pathelement location="${path.variable.maven_repository}/org/junit/jupiter/junit-jupiter-engine/5.8.2/junit-jupiter-engine-5.8.2.jar"/>
  </path>
  
  <path id="library.maven:_org.junit.platform:junit-platform-commons:1.8.2.classpath">
    <pathelement location="${path.variable.maven_repository}/org/junit/platform/junit-platform-commons/1.8.2/junit-platform-commons-1.8.2.jar"/>
  </path>
  
  <path id="library.maven:_org.junit.platform:junit-platform-engine:1.8.2.classpath">
    <pathelement location="${path.variable.maven_repository}/org/junit/platform/junit-platform-engine/1.8.2/junit-platform-engine-1.8.2.jar"/>
  </path>
  
  <path id="library.maven:_org.opentest4j:opentest4j:1.2.0.classpath">
    <pathelement location="${path.variable.maven_repository}/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar"/>
  </path>
  
  
  <!-- Global Libraries -->
  
  <path id="library.bootstrap.classpath">
    <pathelement location="C:/Users/den4i/AppData/Roaming/JetBrains/IntelliJIdea2022.2/javascript/extLibs/http_cdn.jsdelivr.net_npm_bootstrap@5.2.3_dist_css_bootstrap.css"/>
  </path>
  
  
  <!-- Application Server Libraries -->
  
  <!-- Modules -->
  
  
  <!-- Module MDF -->
  
  <dirname property="module.mdf.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.mdf" value="-encoding UTF-8 -source 17 -target 17 ${compiler.args}"/>
  
  <property name="mdf.output.dir" value="${module.mdf.basedir}/target/classes"/>
  <property name="mdf.testoutput.dir" value="${module.mdf.basedir}/target/test-classes"/>
  
  <path id="mdf.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="mdf.module.production.classpath">
    <path refid="library.maven:_javax.servlet:javax.servlet-api:4.0.1.classpath"/>
    <path refid="library.maven:_javax.servlet:jstl:1.2.classpath"/>
    <path refid="library.maven:_jstl:jstl:1.2.classpath"/>
    <path refid="library.maven:_javax.servlet.jsp:javax.servlet.jsp-api:2.3.3.classpath"/>
    <path refid="library.bootstrap.classpath"/>
  </path>
  
  <path id="mdf.runtime.production.module.classpath">
    <pathelement location="${mdf.output.dir}"/>
    <path refid="library.bootstrap.classpath"/>
  </path>
  
  <path id="mdf.module.classpath">
    <pathelement location="${mdf.output.dir}"/>
    <path refid="library.maven:_javax.servlet:javax.servlet-api:4.0.1.classpath"/>
    <path refid="library.maven:_javax.servlet:jstl:1.2.classpath"/>
    <path refid="library.maven:_jstl:jstl:1.2.classpath"/>
    <path refid="library.maven:_javax.servlet.jsp:javax.servlet.jsp-api:2.3.3.classpath"/>
    <path refid="library.maven:_org.junit.jupiter:junit-jupiter-api:5.8.2.classpath"/>
    <path refid="library.maven:_org.opentest4j:opentest4j:1.2.0.classpath"/>
    <path refid="library.maven:_org.junit.platform:junit-platform-commons:1.8.2.classpath"/>
    <path refid="library.maven:_org.apiguardian:apiguardian-api:1.1.2.classpath"/>
    <path refid="library.maven:_org.junit.jupiter:junit-jupiter-engine:5.8.2.classpath"/>
    <path refid="library.maven:_org.junit.platform:junit-platform-engine:1.8.2.classpath"/>
    <path refid="library.bootstrap.classpath"/>
  </path>
  
  <path id="mdf.runtime.module.classpath">
    <pathelement location="${mdf.testoutput.dir}"/>
    <pathelement location="${mdf.output.dir}"/>
    <path refid="library.maven:_javax.servlet:javax.servlet-api:4.0.1.classpath"/>
    <!--<path refid="library.maven:_javax.servlet:jstl:1.2.classpath"/>-->
    <path refid="library.maven:_jstl:jstl:1.2.classpath"/>
    <path refid="library.maven:_javax.servlet.jsp:javax.servlet.jsp-api:2.3.3.classpath"/>
    <path refid="library.maven:_org.junit.jupiter:junit-jupiter-api:5.8.2.classpath"/>
    <path refid="library.maven:_org.opentest4j:opentest4j:1.2.0.classpath"/>
    <path refid="library.maven:_org.junit.platform:junit-platform-commons:1.8.2.classpath"/>
    <path refid="library.maven:_org.apiguardian:apiguardian-api:1.1.2.classpath"/>
    <path refid="library.maven:_org.junit.jupiter:junit-jupiter-engine:5.8.2.classpath"/>
    <path refid="library.maven:_org.junit.platform:junit-platform-engine:1.8.2.classpath"/>
    <path refid="library.bootstrap.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.mdf">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.mdf">
    <patternset refid="excluded.from.module.mdf"/>
  </patternset>
  
  <path id="mdf.module.sourcepath">
    <dirset dir="${module.mdf.basedir}">
      <include name="src/main/java"/>
      <include name="src/main/resources"/>
    </dirset>
  </path>
  
  <path id="mdf.module.test.sourcepath">
    <dirset dir="${module.mdf.basedir}">
      <include name="src/test/java"/>
      <include name="src/test/resources"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.mdf" depends="compile.module.mdf.production,compile.module.mdf.tests" description="Compile module MDF"/>
  
  <target name="compile.module.mdf.production" description="Compile module MDF; production classes">
    <mkdir dir="${mdf.output.dir}"/>
    <javac destdir="${mdf.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.mdf}"/>
      <bootclasspath refid="mdf.module.bootclasspath"/>
      <classpath refid="mdf.module.production.classpath"/>
      <src refid="mdf.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.mdf"/>
    </javac>
    
    <copy todir="${mdf.output.dir}">
      <fileset dir="${module.mdf.basedir}/src/main/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.mdf.basedir}/src/main/resources">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.mdf.tests" depends="compile.module.mdf.production" description="compile module MDF; test classes" unless="skip.tests">
    <mkdir dir="${mdf.testoutput.dir}"/>
    <javac destdir="${mdf.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.mdf}"/>
      <bootclasspath refid="mdf.module.bootclasspath"/>
      <classpath refid="mdf.module.classpath"/>
      <src refid="mdf.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.mdf"/>
    </javac>
    
    <copy todir="${mdf.testoutput.dir}">
      <fileset dir="${module.mdf.basedir}/src/test/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.mdf.basedir}/src/test/resources">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.mdf" description="cleanup module">
    <delete dir="${mdf.output.dir}"/>
    <delete dir="${mdf.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.mdf, clean.artifact.mdf:war_exploded" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.mdf" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.mdf:war" value="${basedir}/target"/>
    <property name="artifact.output.mdf.war_exploded" value="${basedir}/target/MDF-1.0-SNAPSHOT"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="temp.jar.path.MDF-1.0-SNAPSHOT.war" value="${artifacts.temp.dir}/MDF-1.0-SNAPSHOT.war"/>
  </target>
  
  <target name="clean.artifact.mdf:war_exploded" description="clean MDF:war exploded artifact output">
    <delete dir="${artifact.output.mdf.war_exploded}"/>
  </target>
  
  <target name="artifact.mdf:war" depends="init.artifacts, artifact.mdf:war_exploded" description="Build &#39;MDF:war&#39; artifact">
    <property name="artifact.temp.output.mdf:war" value="${artifacts.temp.dir}/MDF_war"/>
    <mkdir dir="${artifact.temp.output.mdf:war}"/>
    <zip destfile="${temp.jar.path.MDF-1.0-SNAPSHOT.war}">
      <zipfileset dir="${artifact.output.mdf.war_exploded}"/>
    </zip>
    <copy file="${temp.jar.path.MDF-1.0-SNAPSHOT.war}" tofile="${artifact.temp.output.mdf:war}/MDF-1.0-SNAPSHOT.war"/>
  </target>
  
  <target name="artifact.mdf:war_exploded" depends="init.artifacts, compile.module.mdf" description="Build &#39;MDF:war exploded&#39; artifact">
    <mkdir dir="${artifact.output.mdf.war_exploded}"/>
    <mkdir dir="${artifact.output.mdf.war_exploded}/WEB-INF"/>
    <mkdir dir="${artifact.output.mdf.war_exploded}/WEB-INF/classes"/>
    <copy todir="${artifact.output.mdf.war_exploded}/WEB-INF/classes">
      <fileset dir="${mdf.output.dir}"/>
    </copy>
    <mkdir dir="${artifact.output.mdf.war_exploded}/META-INF"/>
    <copy file="${basedir}/target/MDF-1.0-SNAPSHOT/META-INF/MANIFEST.MF" tofile="${artifact.output.mdf.war_exploded}/META-INF/MANIFEST.MF"/>
    <copy todir="${artifact.output.mdf.war_exploded}">
      <fileset dir="${basedir}/src/main/webapp"/>
    </copy>
    <mkdir dir="${artifact.output.mdf.war_exploded}/WEB-INF"/>
    <copy file="${basedir}/src/main/webapp/WEB-INF/web.xml" tofile="${artifact.output.mdf.war_exploded}/WEB-INF/web.xml"/>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.mdf:war, artifact.mdf:war_exploded" description="Build all artifacts">
    <mkdir dir="${artifact.output.mdf:war}"/>
    <copy todir="${artifact.output.mdf:war}">
      <fileset dir="${artifact.temp.output.mdf:war}"/>
    </copy>
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>